apiVersion: v1
kind: ConfigMap
metadata:
  name: cube-config
  namespace: stcs
data:
  cube.js: |
    module.exports = {
      contextToAppId: ({ securityContext }) => {
        return 'CUBEJS_APP';
      },
      
      preAggregationsSchema: ({ securityContext }) => {
        return 'pre_aggregations';
      },
      
      scheduledRefreshTimer: 60,
      
      orchestratorOptions: {
        redisPrefix: 'CUBEJS_APP'
      },
      
      // Enable SQL API
      sqlPort: parseInt(process.env.CUBEJS_SQL_PORT) || 15432,
      pgSqlPort: parseInt(process.env.CUBEJS_PG_SQL_PORT) || 15432,
      
      // SQL API authentication - proper implementation
      checkSqlAuth: async (req, username) => {
        const expectedUser = process.env.CUBEJS_SQL_USER || 'cube';
        const expectedPassword = process.env.CUBEJS_SQL_PASSWORD || 'stcs-production-secret-2024';
        
        console.log(`SQL Auth: username=${username}, expected=${expectedUser}`);
        
        if (username === expectedUser) {
          console.log('SQL Auth: Valid username, returning credentials');
          // Return the expected password for PostgreSQL protocol
          return {
            password: expectedPassword,
            securityContext: {},
            superuser: true
          };
        }
        
        console.log(`SQL Auth: Invalid username: ${username}`);
        throw new Error('Invalid username');
      },
      
      // Enable development mode features
      devServer: process.env.CUBEJS_DEV_MODE === 'true',
      
      // JWT configuration for dev dashboard - allow open access in dev mode
      checkAuth: async (req, auth) => {
        // Always allow access in dev mode
        return {};
      },
      
      // Logging
      logger: (msg, params) => {
        console.log(`${msg}: ${JSON.stringify(params)}`);
      }
    };